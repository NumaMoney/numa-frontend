'use client';

import './globals.css';
import { Geist } from '@/lib/Geist';
import { ThemeProvider } from '@/components/theme-provider';
import Header from '@/components/Header';
import { WagmiProvider, useReadContract } from 'wagmi';
import { config } from '@/wagmi/config';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import ConnectorSheet from '@/components/ConnectorSheet';
import { Toaster } from '@/components/ui/sonner';

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

const queryClient = new QueryClient();

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // const setPrice = useSetAtom(priceAtom);

  // const numaEst = useReadContract({
  //   abi: abi.abi,
  //   address: '0x94f007172A4128315Bcc117700fC31E79c42B0a6',
  //   functionName: 'getBuyNumaSimulateExtract',
  //   args: [parseEther('1')],
  // });

  // useEffect(() => {
  //   if (typeof numaEst?.data === 'bigint') {
  //     setPrice(formatEther(numaEst.data));
  //   }
  //   // eslint-disable-next-line react-hooks/exhaustive-deps
  // }, [numaEst?.data]);

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={Geist.className}>
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange>
          <WagmiProvider reconnectOnMount={true} config={config}>
            <QueryClientProvider client={queryClient}>
              <div className="w-full flex flex-col min-h-[740px] h-screen">
                <Header />
                {children}
                <ConnectorSheet />
                <Toaster
                  position="top-center"
                  toastOptions={{
                    style: {
                      background: 'white',
                      color: 'black',
                      border: 'none',
                    },
                  }}
                />
              </div>
            </QueryClientProvider>
          </WagmiProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
